import re

ðŸ’¡ This imports Pythonâ€™s Regular Expressions (re) module.
We use it to search for letters, numbers, and special characters inside the password.



def check_password_strength(password):

ðŸ’¡ This creates a function called check_password_strength.
It will receive the password as input and check if itâ€™s strong or weak.



    if len(password) < 8:
        return "Weak Password: Less than 8 characters"

ðŸ’¡ This checks if the password length is less than 8 characters.
If yes â†’ it returns "Weak Password: Less than 8 characters" immediately.



    if not re.search(r"[A-Z]", password):
        return "Weak Password: No uppercase letter"

ðŸ’¡ This checks if there is no uppercase letter (Aâ€“Z) in the password.
If missing â†’ returns "Weak Password: No uppercase letter".


    if not re.search(r"[a-z]", password):
        return "Weak Password: No lowercase letter"

ðŸ’¡ This checks if there is no lowercase letter (aâ€“z) in the password.
If missing â†’ returns "Weak Password: No lowercase letter".


    if not re.search(r"[0-9]", password):
        return "Weak Password: No number"

ðŸ’¡ This checks if there is no number (0â€“9) in the password.
If missing â†’ returns "Weak Password: No number".


    if not re.search(r"[!@#$%^&*(),.?\":{}|<>]", password):
        return "Weak Password: No special character"

ðŸ’¡ This checks if there is no special character (like ! @ # $ % ^ & *).
If missing â†’ returns "Weak Password: No special character".


    return "âœ… Strong Password!"

ðŸ’¡ If all the above checks pass â†’ the password is strong.
It returns "âœ… Strong Password!".


# User Input
user_pass = input("Enter your password: ")

ðŸ’¡ This asks the user to type a password.
The text they type will be stored in the user_pass variable.


result = check_password_strength(user_pass)

ðŸ’¡ This calls the function check_password_strength() with the entered password
and stores the result in the result variable.


print(result)

ðŸ’¡ This prints the result â€” either a "Weak Password..." message or "âœ… Strong Password!".

